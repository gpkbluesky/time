{"version":3,"sources":["serviceWorker.js","components/components/Introducing.jsx","settings/loader.js","components/components/Clock.jsx","components/components/SettingPopover.jsx","constants/social.js","components/components/FabMenu.jsx","constants/date.js","page/page/App.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Introducing","date","className","Moment","format","loaderSettings","height","width","color","Clock","useState","day","setDay","hour","setHour","minute","setMinute","second","setSecond","isLoading","setIsLoading","setTime","intervals","Date","Math","floor","setDate","useEffect","timeInterval","setInterval","clearInterval","useStyles","makeStyles","theme","root","padding","spacing","SettingPopover","onClose","open","anchorEl","classes","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Paper","Typography","component","variant","social_url","FabMenu","showMenu","setShowMenu","setting","social","showPopover","setShowPopover","setAnchorEl","Fab","aria-label","onClick","prev","Zoom","in","style","transitionDelay","e","event","name","currentTarget","link","fresher","junior","App","thatDay","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73440dc2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Moment from 'moment'\nimport React from 'react'\n\nconst Introducing = ({ date }) => (\n  <div className=\"introducing\">\n    <p>Tính từ ngày {Moment(date).format('DD-MM-YYYY')} thì đã được:</p>\n  </div>\n)\n\nexport default Introducing\n","export const loaderSettings = {\n  height: 5,\n  width: 150,\n  color: '#4A90E2',\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { BarLoader } from 'react-spinners'\nimport { loaderSettings } from 'settings/loader'\n\nconst Clock = ({ date }) => {\n  const [day, setDay] = useState(0)\n  const [hour, setHour] = useState(0)\n  const [minute, setMinute] = useState(0)\n  const [second, setSecond] = useState(0)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const setDate = ({ day, hour, minute, second }) => {\n    setDay(day)\n    setHour(hour)\n    setMinute(minute)\n    setSecond(second)\n  }\n\n  const setTime = () => {\n    let currentDate = new Date()\n    let thatDate = new Date(date)\n    let intervals = (currentDate - thatDate) / 1000\n\n    let day = Math.floor(intervals / (60 * 60 * 24))\n    day = day < 10 ? '0' + day : day\n    intervals -= day * 60 * 60 * 24\n\n    let hour = Math.floor(intervals / (60 * 60))\n    hour = hour < 10 ? '0' + hour : hour\n    intervals -= hour * 60 * 60\n\n    let minute = Math.floor(intervals / 60)\n    minute = minute < 10 ? '0' + minute : minute\n    intervals -= minute * 60\n\n    let second = Math.floor(intervals)\n    second = second < 10 ? '0' + second : second\n\n    setDate({\n      day,\n      hour,\n      minute,\n      second\n    })\n  }\n\n  useEffect(() => {\n    if (!!day || !!hour || !!minute || !!second) setIsLoading(false)\n  }, [day, hour, minute, second])\n\n  useEffect(() => {\n    const timeInterval = setInterval(() => setTime(), 1000)\n    return () => clearInterval(timeInterval)\n  })\n\n  return !isLoading ? (\n    <div className=\"clock\">\n      <div className=\"clock-element day\">\n        <p className=\"number\">{day}</p>\n        <p className=\"text\">NGÀY</p>\n      </div>\n      <div className=\"clock-element dot dot1\">\n        <span>:</span>\n      </div>\n      <div className=\"clock-element hour\">\n        <p className=\"number\">{hour}</p>\n        <p className=\"text\">GIỜ</p>\n      </div>\n      <div className=\"clock-element dot dot2\">\n        <span>:</span>\n      </div>\n      <div className=\"clock-element minute\">\n        <p className=\"number\">{minute}</p>\n        <p className=\"text\">PHÚT</p>\n      </div>\n      <div className=\"clock-element dot dot3\">\n        <span>:</span>\n      </div>\n      <div className=\"clock-element second\">\n        <p className=\"number\">{second}</p>\n        <p className=\"text\">GIÂY</p>\n      </div>\n    </div>\n  ) : (\n    <BarLoader {...loaderSettings} />\n  )\n}\n\nexport default Clock\n","import Paper from '@material-ui/core/Paper'\nimport Popover from '@material-ui/core/Popover'\nimport React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))\n\nconst SettingPopover = ({ onClose, open, anchorEl }) => {\n  const classes = useStyles()\n  return (\n    <Popover\n      className=\"menu-popover\"\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      transformOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n    >\n      <Paper className={classes.root}>\n        <Typography component=\"h3\" variant=\"h5\">\n          Settings\n        </Typography>\n        <Typography component=\"p\">I have no idea..</Typography>\n      </Paper>\n    </Popover>\n  )\n}\n\nexport default SettingPopover\n","export const social_url = {\n  facebook: 'https://www.facebook.com/NguyenAlwaysSmile'\n}\n","import React, { useState } from 'react'\n\nimport BlurOnIcon from '@material-ui/icons/BlurOn'\nimport { Fab } from '@material-ui/core'\nimport FacebookIcon from '@material-ui/icons/Facebook'\nimport SettingPopover from './SettingPopover'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { Zoom } from '@material-ui/core'\nimport { social_url } from 'constants/social'\n\nconst FabMenu = () => {\n  const [showMenu, setShowMenu] = useState(false)\n  const [showPopover, setShowPopover] = useState({\n    setting: false,\n    social: false\n  })\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const toggleShowMenu = () => setShowMenu(prev => !prev)\n\n  const onOpen = (event, name) => {\n    setShowPopover(prev => ({ ...prev, [name]: true }))\n    setAnchorEl(event.currentTarget)\n  }\n  const onClose = name => {\n    setShowPopover(prev => ({ ...prev, [name]: false }))\n    setAnchorEl(null)\n  }\n\n  const moveTo = link => {\n    window.open(link, '_blank')\n  }\n\n  return (\n    <div className=\"fab-menu\">\n      <Fab color=\"primary\" aria-label=\"menu\" onClick={toggleShowMenu}>\n        <BlurOnIcon />\n      </Fab>\n      <div className=\"fab-menu-group\">\n        <div className=\"fab-menu-item\">\n          <Zoom\n            in={showMenu}\n            style={{ transitionDelay: showMenu ? '100ms' : '0ms' }}\n          >\n            <Fab\n              color=\"secondary\"\n              aria-label=\"setting\"\n              onClick={e => onOpen(e, 'setting')}\n            >\n              <SettingsIcon />\n            </Fab>\n          </Zoom>\n          <SettingPopover\n            open={showPopover.setting}\n            onClose={() => onClose('setting')}\n            anchorEl={anchorEl}\n          />\n        </div>\n        <div className=\"fab-menu-item\">\n          <Zoom\n            in={showMenu}\n            style={{ transitionDelay: showMenu ? '200ms' : '100ms' }}\n          >\n            <Fab\n              aria-label=\"social\"\n              onClick={() => moveTo(social_url.facebook)}\n            >\n              <FacebookIcon />\n            </Fab>\n          </Zoom>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FabMenu\n","export const date = {\n  job: {\n    fresher: '06/05/2019',\n    junior: '09/16/2019'\n  },\n  love: {}\n}\n","import 'main.scss'\n\nimport { Clock, FabMenu, Introducing } from 'components'\n\nimport React from 'react'\nimport { date } from 'constants/date'\n\nconst App = () => {\n  const thatDay = date.job.junior\n\n  return (\n    <div className=\"App\">\n      <div className=\"group\">\n        {!!thatDay && (\n          <>\n            <Introducing date={thatDay} />\n            <Clock date={thatDay} />\n          </>\n        )}\n      </div>\n      <FabMenu />\n    </div>\n  )\n}\n\nexport default App\n","import * as serviceWorker from './serviceWorker'\n\nimport { App } from './page'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}